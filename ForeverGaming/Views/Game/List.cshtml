@using Type = ForeverGaming.Models.Type
@model GameListViewModel

@{
    ViewData["Title"] = " | Game List";

    // aliases to make paging, sorting, and filtering code shorter
    RouteDictionary current = Model.CurrentRoute;
    RouteDictionary routes = Model.CurrentRoute.Clone();
}

<h1 class="thead-dark bg-dark" style="text-align: center; color:aqua">Game List</h1>

@* filter form *@
<form asp-action="Filter" method="post" class="form-inline">
    
    <label style="font-weight:bold" m-2>Genre:</label>
    <select name="filter" class="form-control"
            asp-items="@(new SelectList(
                           Model.Genres, "GenreId", "Name", current.GenreFilter))">
        <option value="@GameGridDTO.DefaultFilter">All</option>
    </select>

    <label style="font-weight:bold" m-2>Type:</label>
    <select name="filter" class="form-control"
            asp-items="@(new SelectList(
                           Model.Types, "TypeId", "Name", current.TypeFilter))">
        <option value="@GameGridDTO.DefaultFilter">All</option>
    </select>
    
    <label  style="font-weight:bold" m-2>Format:</label>
    <select name="filter" class="form-control"
            asp-items="@(new SelectList(
                           Model.Formats, "FormatId", "Name", current.FormatFilter))">
        <option value="@GameGridDTO.DefaultFilter">All</option>
    </select>
    
    <label  style="font-weight:bold" m-2>Rating:</label>
    <select name="filter" class="form-control"
            asp-items="@(new SelectList(
                           Model.Ratings, "RatingId", "Name", current.RatingFilter))">
        <option value="@GameGridDTO.DefaultFilter">All</option>
    </select>
    
    <label  style="font-weight:bold" m-2>Publisher:</label>
    <select name="filter" class="form-control"
            asp-items="@(new SelectList(
                           Model.Publishers, "PublisherId", "Name", current.PublisherFilter))">
        <option value="@GameGridDTO.DefaultFilter">All</option>
    </select>

    <button type="submit" class="btn bg-custom m-2">Filter</button>
    <button type="submit" class="btn bg-custom" name="clear" value="true">Clear</button>

</form>

<table class="table table-striped table-bordered">
    @* for each table column, update the route dictionary with the field to sort by, and then use
        that route dictionary and the current route to create route segments for sorting link *@
    <thead class="thead-dark">
        <tr>
            <th>
                @{ routes.SetSortAndDirection(nameof(Game.Name), current); }
                <a asp-action="List" asp-all-route-data="@routes"
                   style="color:aqua">Title</a>
            </th>
            <th style="color:aqua">
                @{ routes.SetSortAndDirection(nameof(Genre), current); }
                <a asp-action="List" asp-all-route-data="@routes"
                   style="color:aqua">Genre</a>
            </th>
            <th style="color:aqua">
                @{ routes.SetSortAndDirection(nameof(Type), current); }
                <a asp-action="List" asp-all-route-data="@routes"
                   style="color:aqua">Type</a>
            </th>
            <th style="color:aqua">
                @{ routes.SetSortAndDirection(nameof(Format), current); }
                <a asp-action="List" asp-all-route-data="@routes"
                   style="color:aqua">Format</a>
            </th>
            <th style="color:aqua">
                @{ routes.SetSortAndDirection(nameof(Rating), current); }
                <a asp-action="List" asp-all-route-data="@routes"
                   style="color:aqua">Rating</a>
            </th>
            <th style="color:aqua">
                @{ routes.SetSortAndDirection(nameof(Publisher), current); }
                <a asp-action="List" asp-all-route-data="@routes"
                   style="color:aqua">Publisher</a>
            </th>
    </tr>
    </thead>
    <tbody>
    @foreach (Game game in Model.Games)
    {
        <tr>
            <td>
                <a asp-action="Details" asp-route-id="@game.GameId"
                   asp-route-slug="@game.Name.Slug()" style="color: black">
                    @game.Name
                </a>
            </td>
            <td>@game.Genre?.Name</td>
            <td>@game.Type?.Name</td>
            <td>@game.Format?.Name</td>
            <td>@game.Rating?.Name</td>
            <td>@game.Publisher?.Name</td>
        </tr>
    }
    </tbody>
</table>


<partial name="_ClonePartial"/>